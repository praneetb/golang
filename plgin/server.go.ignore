package main

import (
  "net/rpc"
  "net/http"
  "net"
  "log"
  "fmt"
)

type Args struct {
  Val1 int
  Val2 int
}

type Quotient struct {
  Quo int
  Rem int
}

type Arith int

func (a *Arith) Multiply(args *Args, reply *int) error {
  *reply = args.Val1 * args.Val2
  return nil
}

func main() {
  // Server 
  arith := new(Arith)
  rpc.Register(arith)
  rpc.HandleHTTP()

  l,e := net.Listen("tcp", ":1234")
  if e!= nil {
    log.Fatal("Listen error:", e)
  }
  go http.Serve(l, nil)


  //Client
  client, err := rpc.DialHTTP("tcp", "127.0.0.1:1234")
  if err != nil {
    log.Fatal("dialing:", err)
  }

  args := &Args{7,6}
  var reply int
  err = client.Call("Arith.Multiply", args, &reply)
  if err !=nil {
    log.Fatal("arith error:", err)
  }
  fmt.Print("Mult: ", reply)
  fmt.Print("\n")
}
